syntax = "proto3";
package x.paxi.types;

import "cosmos/base/v1beta1/coin.proto";
import "cosmos/msg/v1/msg.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/paxi-web3/paxi/x/paxi/types";

message MsgBurnToken {
  // Address of the sender. NOTE: This message must be signed externally.
  option (cosmos.msg.v1.signer) = "sender"; 
  string sender = 1; 
  repeated cosmos.base.v1beta1.Coin amount = 2;
}

message MsgBurnTokenResponse {}

message ParamsInput {
  uint64 extra_gas_per_new_account = 1;
}

message MsgUpdateParams {
  option (cosmos.msg.v1.signer) = "authority";

  string authority = 1;
  ParamsInput params = 2 [(gogoproto.nullable) = false];
}

message MsgUpdateParamsResponse {}

service Msg {
  option (cosmos.msg.v1.service) = true;
  rpc BurnToken(MsgBurnToken) returns (MsgBurnTokenResponse) {
    option (google.api.http) = {
        post: "/tx/paxi/burn_token"
        body: "*"
    };
  }

  rpc UpdateParams(MsgUpdateParams) returns (MsgUpdateParamsResponse);
}
