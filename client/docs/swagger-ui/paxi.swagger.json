{
  "swagger": "2.0",
  "info": {
    "title": "x/paxi/types/query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Query"
    },
    {
      "name": "Msg"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/paxi/custommint/params": {
      "get": {
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xcustomminttypesQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/custommint/total_burned": {
      "get": {
        "operationId": "Query_TotalBurned",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalBurnedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/custommint/total_minted": {
      "get": {
        "operationId": "Query_TotalMinted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalMintedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/customwasm/params": {
      "get": {
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xcustomwasmtypesQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/circulating_supply": {
      "get": {
        "operationId": "Query_CirculatingSupply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryCirculatingSupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/last_block_gas_used": {
      "get": {
        "operationId": "Query_LastBlockGasUsed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryLastBlockGasUsedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/locked_vesting": {
      "get": {
        "operationId": "Query_LockedVesting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryLockedVestingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/params": {
      "get": {
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xpaxitypesQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/total_supply": {
      "get": {
        "operationId": "Query_TotalSupply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalSupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/total_txs": {
      "get": {
        "operationId": "Query_TotalTxs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalTxsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/unlock_schedules": {
      "get": {
        "operationId": "Query_UnlockSchedules",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryUnlockSchedulesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/swap/all_pools": {
      "get": {
        "operationId": "Query_AllPools",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryAllPoolsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.key",
            "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "pagination.offset",
            "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.limit",
            "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "uint64"
          },
          {
            "name": "pagination.countTotal",
            "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set.",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pagination.reverse",
            "description": "reverse is set to true if results are to be returned in the descending order.",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/swap/params": {
      "get": {
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xswaptypesQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/swap/pool/{prc20}": {
      "get": {
        "operationId": "Query_Pool",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryPoolResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "prc20",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/swap/position/{creator}/{prc20}": {
      "get": {
        "operationId": "Query_Position",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryPositionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "creator",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "prc20",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Query"
        ]
      }
    },
    "/tx/paxi/burn_token": {
      "post": {
        "operationId": "Msg_BurnToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesMsgBurnTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/typesMsgBurnToken"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/tx/swap/provide_liquidity": {
      "post": {
        "operationId": "Msg_ProvideLiquidity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesMsgProvideLiquidityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/typesMsgProvideLiquidity"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/tx/swap/swap": {
      "post": {
        "operationId": "Msg_Swap",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesMsgSwapResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/typesMsgSwap"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    },
    "/tx/swap/withdraw_liquidity": {
      "post": {
        "operationId": "Msg_WithdrawLiquidity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesMsgWithdrawLiquidityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/typesMsgWithdrawLiquidity"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesMsgBurnToken": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string"
        },
        "amount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Coin"
          }
        }
      }
    },
    "typesMsgBurnTokenResponse": {
      "type": "object"
    },
    "typesMsgProvideLiquidity": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "prc20": {
          "type": "string"
        },
        "paxiAmount": {
          "type": "string"
        },
        "prc20Amount": {
          "type": "string"
        }
      }
    },
    "typesMsgProvideLiquidityResponse": {
      "type": "object"
    },
    "typesMsgSwap": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "prc20": {
          "type": "string"
        },
        "offerDenom": {
          "type": "string",
          "title": "\"upaxi\" or PRC20 contract address"
        },
        "offerAmount": {
          "type": "string",
          "title": "string to support big.Int"
        },
        "minReceive": {
          "type": "string",
          "title": "slippage protection"
        }
      }
    },
    "typesMsgSwapResponse": {
      "type": "object"
    },
    "typesMsgWithdrawLiquidity": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "prc20": {
          "type": "string"
        },
        "lpAmount": {
          "type": "string"
        }
      }
    },
    "typesMsgWithdrawLiquidityResponse": {
      "type": "object"
    },
    "typesProviderPosition": {
      "type": "object",
      "properties": {
        "creator": {
          "type": "string"
        },
        "prc20": {
          "type": "string"
        },
        "lpAmount": {
          "type": "string"
        }
      }
    },
    "typesQueryAllPoolsResponse": {
      "type": "object",
      "properties": {
        "pools": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesQueryPoolResponse"
          }
        },
        "pagination": {
          "$ref": "#/definitions/v1beta1PageResponse"
        }
      }
    },
    "typesQueryCirculatingSupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryLastBlockGasUsedResponse": {
      "type": "object",
      "properties": {
        "gasUsed": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "typesQueryLockedVestingResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryPoolResponse": {
      "type": "object",
      "properties": {
        "prc20": {
          "type": "string"
        },
        "reservePaxi": {
          "type": "string"
        },
        "reservePrc20": {
          "type": "string"
        },
        "pricePaxiPerPrc20": {
          "type": "string"
        },
        "pricePrc20PerPaxi": {
          "type": "string"
        },
        "totalShares": {
          "type": "string"
        }
      }
    },
    "typesQueryPositionResponse": {
      "type": "object",
      "properties": {
        "position": {
          "$ref": "#/definitions/typesProviderPosition"
        },
        "expectedPaxi": {
          "type": "string"
        },
        "expectedPrc20": {
          "type": "string"
        }
      }
    },
    "typesQueryTotalBurnedResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryTotalMintedResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryTotalSupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryTotalTxsResponse": {
      "type": "object",
      "properties": {
        "totalTxs": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "typesQueryUnlockSchedulesResponse": {
      "type": "object",
      "properties": {
        "unlockSchedules": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/typesUnlockSchedule"
          }
        }
      }
    },
    "typesUnlockSchedule": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "timeStr": {
          "type": "string"
        },
        "timeUnix": {
          "type": "string",
          "format": "int64"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "v1beta1Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "v1beta1PageRequest": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "format": "byte",
          "description": "key is a value returned in PageResponse.next_key to begin\nquerying the next page most efficiently. Only one of offset or key\nshould be set."
        },
        "offset": {
          "type": "string",
          "format": "uint64",
          "description": "offset is a numeric offset that can be used when key is unavailable.\nIt is less efficient than using key. Only one of offset or key should\nbe set."
        },
        "limit": {
          "type": "string",
          "format": "uint64",
          "description": "limit is the total number of results to be returned in the result page.\nIf left empty it will default to a value to be set by each app."
        },
        "countTotal": {
          "type": "boolean",
          "description": "count_total is set to true  to indicate that the result set should include\na count of the total number of items available for pagination in UIs.\ncount_total is only respected when offset is used. It is ignored when key\nis set."
        },
        "reverse": {
          "type": "boolean",
          "description": "reverse is set to true if results are to be returned in the descending order."
        }
      },
      "description": "message SomeRequest {\n         Foo some_parameter = 1;\n         PageRequest pagination = 2;\n }",
      "title": "PageRequest is to be embedded in gRPC request messages for efficient\npagination. Ex:"
    },
    "v1beta1PageResponse": {
      "type": "object",
      "properties": {
        "nextKey": {
          "type": "string",
          "format": "byte",
          "description": "next_key is the key to be passed to PageRequest.key to\nquery the next page most efficiently. It will be empty if\nthere are no more results."
        },
        "total": {
          "type": "string",
          "format": "uint64",
          "title": "total is total number of results available if PageRequest.count_total\nwas set, its value is undefined otherwise"
        }
      },
      "description": "PageResponse is to be embedded in gRPC response messages where the\ncorresponding request message has used PageRequest.\n\n message SomeResponse {\n         repeated Bar results = 1;\n         PageResponse page = 2;\n }"
    },
    "xcustomminttypesQueryParamsResponse": {
      "type": "object",
      "properties": {
        "burnThreshold": {
          "type": "string"
        },
        "burnRatio": {
          "type": "string"
        },
        "blocksPerYear": {
          "type": "string",
          "format": "int64"
        },
        "firstYearInflation": {
          "type": "string"
        },
        "secondYearInflation": {
          "type": "string"
        },
        "otherYearInflation": {
          "type": "string"
        }
      }
    },
    "xcustomwasmtypesQueryParamsResponse": {
      "type": "object",
      "properties": {
        "storeCodeBaseGas": {
          "type": "string",
          "format": "uint64"
        },
        "storeCodeMultiplier": {
          "type": "string",
          "format": "uint64"
        },
        "instBaseGas": {
          "type": "string",
          "format": "uint64"
        },
        "instMultiplier": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "xpaxitypesMsgUpdateParamsResponse": {
      "type": "object"
    },
    "xpaxitypesParamsInput": {
      "type": "object",
      "properties": {
        "extraGasPerNewAccount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "xpaxitypesQueryParamsResponse": {
      "type": "object",
      "properties": {
        "extraGasPerNewAccount": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "xswaptypesMsgUpdateParamsResponse": {
      "type": "object"
    },
    "xswaptypesParamsInput": {
      "type": "object",
      "properties": {
        "codeId": {
          "type": "string",
          "format": "uint64"
        },
        "swapFeeBps": {
          "type": "string",
          "format": "uint64"
        },
        "minLiquidity": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "xswaptypesQueryParamsResponse": {
      "type": "object",
      "properties": {
        "codeId": {
          "type": "string",
          "format": "uint64"
        },
        "swapFeeBps": {
          "type": "string",
          "format": "uint64"
        },
        "minLiquidity": {
          "type": "string",
          "format": "uint64"
        }
      }
    }
  }
}
