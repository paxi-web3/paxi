{
  "swagger": "2.0",
  "info": {
    "title": "x/paxi/types/query.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Query"
    },
    {
      "name": "Msg"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/paxi/custommint/params": {
      "get": {
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xcustomminttypesQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/custommint/total_burned": {
      "get": {
        "operationId": "Query_TotalBurned",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalBurnedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/custommint/total_minted": {
      "get": {
        "operationId": "Query_TotalMinted",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalMintedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/customwasm/params": {
      "get": {
        "operationId": "Query_Params",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/xcustomwasmtypesQueryParamsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/circulating_supply": {
      "get": {
        "operationId": "Query_CirculatingSupply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryCirculatingSupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/estimated_gas_price": {
      "get": {
        "operationId": "Query_EstimatedGasPrice",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryEstimatedGasPriceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/last_block_gas_used": {
      "get": {
        "operationId": "Query_LastBlockGasUsed",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryLastBlockGasUsedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/locked_vesting": {
      "get": {
        "operationId": "Query_LockedVesting",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryLockedVestingResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/total_supply": {
      "get": {
        "operationId": "Query_TotalSupply",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalSupplyResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/paxi/paxi/total_txs": {
      "get": {
        "operationId": "Query_TotalTxs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesQueryTotalTxsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Query"
        ]
      }
    },
    "/tx/paxi/burn_token": {
      "post": {
        "operationId": "Msg_BurnToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/typesMsgBurnTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/typesMsgBurnToken"
            }
          }
        ],
        "tags": [
          "Msg"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "typesMsgBurnToken": {
      "type": "object",
      "properties": {
        "sender": {
          "type": "string"
        },
        "amount": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1beta1Coin"
          }
        }
      }
    },
    "typesMsgBurnTokenResponse": {
      "type": "object"
    },
    "typesQueryCirculatingSupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryEstimatedGasPriceResponse": {
      "type": "object",
      "properties": {
        "gasPrice": {
          "type": "string"
        }
      }
    },
    "typesQueryLastBlockGasUsedResponse": {
      "type": "object",
      "properties": {
        "gasUsed": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "typesQueryLockedVestingResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryTotalBurnedResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryTotalMintedResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryTotalSupplyResponse": {
      "type": "object",
      "properties": {
        "amount": {
          "$ref": "#/definitions/v1beta1Coin"
        }
      }
    },
    "typesQueryTotalTxsResponse": {
      "type": "object",
      "properties": {
        "totalTxs": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1beta1Coin": {
      "type": "object",
      "properties": {
        "denom": {
          "type": "string"
        },
        "amount": {
          "type": "string"
        }
      },
      "description": "Coin defines a token with a denomination and an amount.\n\nNOTE: The amount field is an Int which implements the custom method\nsignatures required by gogoproto."
    },
    "xcustomminttypesQueryParamsResponse": {
      "type": "object",
      "properties": {
        "burnThreshold": {
          "type": "string"
        },
        "burnRatio": {
          "type": "string"
        },
        "blocksPerYear": {
          "type": "string",
          "format": "int64"
        },
        "firstYearInflation": {
          "type": "string"
        },
        "secondYearInflation": {
          "type": "string"
        },
        "otherYearInflation": {
          "type": "string"
        }
      }
    },
    "xcustomwasmtypesQueryParamsResponse": {
      "type": "object",
      "properties": {
        "storeCodeBaseGas": {
          "type": "string",
          "format": "uint64"
        },
        "storeCodeMultiplier": {
          "type": "string",
          "format": "uint64"
        },
        "instBaseGas": {
          "type": "string",
          "format": "uint64"
        },
        "instMultiplier": {
          "type": "string",
          "format": "uint64"
        }
      }
    }
  }
}
